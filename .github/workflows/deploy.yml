name: Deploy to GitHub Pages

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    env:
      NODE_ENV: production
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          
      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9
          
      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV
          
      - name: Setup pnpm cache
        uses: actions/cache@v4
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-
          
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
        
      - name: Setup Pages
        uses: actions/configure-pages@v4
        with:
          # Automatically inject basePath in your Next.js configuration file and disable
          # server side image optimization (so it can work with GitHub Pages).
          #
          # You may remove this line if you want to manage the configuration yourself.
          static_site_generator: next
        
      - name: Debug file structure
        run: |
          echo "Current directory contents:"
          ls -la
          echo "Components directory contents:"
          ls -la components/
          echo "App directory contents:"
          ls -la app/
          echo "Node modules check:"
          ls -la node_modules/ | head -10
          echo "Checking for tailwindcss:"
          ls -la node_modules/.pnpm/ | grep tailwind || echo "No tailwindcss found in .pnpm"
          echo "Next.js config files:"
          ls -la next.config.*
          echo "Contents of next.config.js:"
          cat next.config.js
          
      - name: Build with Next.js
        run: |
          echo "Building with NODE_ENV=$NODE_ENV"
          pnpm run export
        
      - name: List build output
        run: |
          echo "Listing current directory:"
          ls -la
          echo "Checking if out directory exists:"
          if [ -d "out" ]; then
            echo "out directory exists:"
            ls -la out/
          else
            echo "out directory does not exist"
            echo "Checking .next directory:"
            ls -la .next/ || echo ".next directory also does not exist"
          fi
        
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./out

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4 